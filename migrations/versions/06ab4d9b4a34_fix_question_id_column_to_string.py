"""Fix question_id column to String

Revision ID: 06ab4d9b4a34
Revises: 7b2431f05ea8
Create Date: 2025-06-12 01:57:42.027167

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '06ab4d9b4a34'
down_revision = '7b2431f05ea8'
branch_labels = None
depends_on = None


def upgrade():
    with op.batch_alter_table("question_progress") as batch_op:
        # 1. Drop foreign key constraint
        batch_op.drop_constraint("question_progress_question_id_fkey", type_="foreignkey")
        
        # 2. Alter column type from Integer to String
        batch_op.alter_column("question_id",
            existing_type=sa.Integer(),
            type_=sa.String(),
            existing_nullable=False
        )
        
        # 3. Recreate foreign key with correct type pointing to questions.id
        # (only if questions.id has also been changed to String in your models)
        # If not, omit this and just remove the FK entirely
        # batch_op.create_foreign_key(
        #     "question_progress_question_id_fkey", "questions", ["question_id"], ["id"]
        # )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('question_progress', schema=None) as batch_op:
        batch_op.create_foreign_key(batch_op.f('question_progress_question_id_fkey'), 'questions', ['question_id'], ['id'])
        batch_op.alter_column('question_id',
               existing_type=sa.String(),
               type_=sa.INTEGER(),
               existing_nullable=False)

    # ### end Alembic commands ###
